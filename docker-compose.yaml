version: '3'
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Default123!}
      POSTGRES_DB: ${POSTGRES_DB:-expenses}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - expense-network

  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    healthcheck:
      test: [ "CMD-SHELL", "zkServer.sh status" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - expense-network

  kafka:
    image: bitnami/kafka:3.7
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: "INTERNAL://:9092,EXTERNAL://:9094"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server localhost:9092" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "9094:9094"
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - expense-network

  kafdrop:
    image: obsidiandynamics/kafdrop:3.31.0
    environment:
      KAFKA_BROKER_CONNECT: kafka:9092
      JVM_OPTS: -Xms32M -Xmx64M
    ports:
      - "9000:9000"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - expense-network

networks:
  expense-network:
    driver: bridge

volumes:
  postgres_data:
